{"version":3,"sources":["data/users.js","Components/ViewUsers.js","Components/Form.js","Components/AddUser.js","Components/EditUser.js","App.js","serviceWorker.js","index.js"],"names":["data","id","name","occupation","ViewUsers","props","users","deleteUser","editMode","editUser","rows","map","user","key","className","onClick","length","colSpan","Form","onSubmit","submitFn","autoComplete","htmlFor","nameId","type","value","onChange","changeFn","onBlur","blurFn","occupationId","formType","closeEdit","AddUser","addUser","currentUser","useState","setUser","e","preventDefault","target","trim","EditUser","userToEdit","useEffect","App","setUsers","isEdit","setIsEdit","selectUser","setSelectUser","editedUser","usersArr","len","newId","filter","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9ddd37d1.chunk.js","sourcesContent":["export const data = {\r\n  users: [\r\n    {\r\n      id: 1,\r\n      name: \"Frank\",\r\n      occupation: \"Teacher\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Susan\",\r\n      occupation: \"Dance Instructor\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Mary\",\r\n      occupation: \"Bar Tender\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Dan\",\r\n      occupation: \"Physician\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Ivan\",\r\n      occupation: \"Chef\",\r\n    },\r\n  ],\r\n};\r\n","import React from \"react\";\r\n\r\nconst ViewUsers = props => {\r\n  const { users, deleteUser, editMode, editUser } = props;\r\n  const rows = users.map(user => {\r\n    return (\r\n      <tr key={user.id}>\r\n        <td className=\"user__name\">{user.name}</td>\r\n        <td className=\"user__occupation\">{user.occupation}</td>\r\n        <td>\r\n          <button className=\"edit btn btn-primary\" onClick={() => editUser(user)}>\r\n            Edit\r\n          </button>\r\n          {editMode ? (\r\n            <button className=\"delete btn btn-danger disabled\">Delete</button>\r\n          ) : (\r\n            <button\r\n              className=\"delete btn btn-danger\"\r\n              onClick={() => deleteUser(user.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          )}\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h3>Users</h3>\r\n      <table className=\"table table-striped table-hover\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Occupation</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.length === 0 ? (\r\n            <tr>\r\n              <th colSpan={3}>No Data Available</th>\r\n            </tr>\r\n          ) : (\r\n            rows\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewUsers;\r\n","import React from \"react\";\r\n\r\nconst Form = props => {\r\n  return (\r\n    <form onSubmit={props.submitFn} autoComplete=\"off\">\r\n      <div className=\"form-group\">\r\n        <label htmlFor={props.nameId}>Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={props.name}\r\n          id={props.nameId}\r\n          className=\"form-control form-control-lg\"\r\n          onChange={props.changeFn}\r\n          onBlur={props.blurFn}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor={props.occupationId}>Occupation</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"occupation\"\r\n          value={props.occupation}\r\n          id={props.occupationId}\r\n          className=\"form-control form-control-lg\"\r\n          onChange={props.changeFn}\r\n          onBlur={props.blurFn}\r\n        />\r\n      </div>\r\n      {props.formType === \"edit\" ? (\r\n        <div className=\"ctrl__btns\">\r\n          <span className=\"btn btn-secondary\" onClick={() => props.closeEdit()}>\r\n            Cancel\r\n          </span>\r\n          <input type=\"submit\" className=\"btn btn-primary\" value=\"Edit\" />\r\n        </div>\r\n      ) : (\r\n        <input type=\"submit\" className=\"btn btn-success\" value=\"Add\" />\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState } from \"react\";\r\nimport Form from \"./Form\";\r\n\r\nconst AddUser = ({ addUser }) => {\r\n  const currentUser = { name: \"\", occupation: \"\" };\r\n  const [user, setUser] = useState(currentUser);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const handleBlur = e => {\r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value.trim() });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (!user.name || !user.occupation) return;\r\n\r\n    addUser(user);\r\n    setUser(currentUser);\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-user\">\r\n      <h3>Add User</h3>\r\n      <Form\r\n        nameId=\"add__name\"\r\n        occupationId=\"add__occupation\"\r\n        name={user.name}\r\n        occupation={user.occupation}\r\n        submitFn={handleSubmit}\r\n        changeFn={handleChange}\r\n        blurFn={handleBlur}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Form from \"./Form\";\r\n\r\nconst EditUser = props => {\r\n  const { userToEdit, editUser, closeEdit } = props;\r\n  const [user, setUser] = useState(userToEdit);\r\n\r\n  useEffect(() => {\r\n    setUser(userToEdit);\r\n  }, [userToEdit]);\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const handleBlur = e => {\r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value.trim() });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (!user.name || !user.occupation) return;\r\n\r\n    editUser(user);\r\n  };\r\n\r\n  return (\r\n    <div className=\"edit-user\">\r\n      <h3>Edit User</h3>\r\n      <Form\r\n        formType=\"edit\"\r\n        nameId=\"edit__name\"\r\n        occupationId=\"edit__occupation\"\r\n        name={user.name}\r\n        occupation={user.occupation}\r\n        closeEdit={closeEdit}\r\n        submitFn={handleSubmit}\r\n        changeFn={handleChange}\r\n        blurFn={handleBlur}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n","import React, { useState } from \"react\";\r\nimport { data } from \"./data/users\";\r\nimport ViewUsers from \"./Components/ViewUsers\";\r\nimport AddUser from \"./Components/AddUser\";\r\nimport EditUser from \"./Components/EditUser\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\";\r\n\r\nconst App = () => {\r\n  const user = { id: null, name: \"\", occupation: \"\" };\r\n\r\n  const [users, setUsers] = useState(data.users);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [selectUser, setSelectUser] = useState(user);\r\n\r\n  const add = user => {\r\n    const len = users.length;\r\n    const newId = len === 0 ? 1 : users[len - 1].id + 1;\r\n    user.id = newId;\r\n\r\n    setUsers([...users, user]);\r\n  };\r\n\r\n  const del = id => {\r\n    setUsers(users.filter(user => user.id !== id));\r\n  };\r\n\r\n  const edit = userToEdit => {\r\n    setIsEdit(true);\r\n    setSelectUser(userToEdit);\r\n  };\r\n\r\n  const editUser = editedUser => {\r\n    const usersArr = users.map(user => {\r\n      return user.id === editedUser.id ? editedUser : user;\r\n    });\r\n\r\n    setUsers(usersArr);\r\n    setIsEdit(false);\r\n    setSelectUser(user);\r\n  };\r\n\r\n  const closeEdit = () => {\r\n    setIsEdit(false);\r\n    setSelectUser(user);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Personnel Manager</h1>\r\n      <div className=\"row\">\r\n        <div className=\"form-container col-md-5\">\r\n          {isEdit ? (\r\n            <EditUser\r\n              userToEdit={selectUser}\r\n              editUser={editUser}\r\n              closeEdit={closeEdit}\r\n            />\r\n          ) : (\r\n            <AddUser addUser={add} />\r\n          )}\r\n        </div>\r\n        <div className=\"table-responsive-md col-md-7\">\r\n          <ViewUsers\r\n            users={users}\r\n            editMode={isEdit}\r\n            deleteUser={del}\r\n            editUser={edit}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}