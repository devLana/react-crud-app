{"version":3,"sources":["data/users.js","Components/ViewUsers.js","Components/Form.js","Components/AddUser.js","Components/EditUser.js","App.js","serviceWorker.js","index.js"],"names":["data","id","name","occupation","ViewUsers","users","deleteUser","editMode","editUser","rows","map","user","key","className","onClick","length","colSpan","Form","props","onSubmit","submitFn","autoComplete","htmlFor","nameId","type","value","onChange","changeFn","onBlur","blurFn","occupationId","formType","closeEdit","AddUser","addUser","currentUser","useState","setUser","e","preventDefault","target","trim","EditUser","userToEdit","useEffect","App","setUsers","isEdit","setIsEdit","selectUser","setSelectUser","editedUser","usersArr","len","newId","filter","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c5cff0a3.chunk.js","sourcesContent":["export const data = {\r\n  users: [\r\n    {\r\n      id: 1,\r\n      name: \"Frank\",\r\n      occupation: \"Teacher\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Susan\",\r\n      occupation: \"Dance Instructor\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Mary\",\r\n      occupation: \"Bar Tender\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Dan\",\r\n      occupation: \"Physician\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Ivan\",\r\n      occupation: \"Chef\",\r\n    },\r\n  ],\r\n};\r\n","import React from \"react\";\r\n\r\nconst ViewUsers = ({ users, deleteUser, editMode, editUser }) => {\r\n  const rows = users.map(user => {\r\n    const handleEdit = () => editUser(user);\r\n    const handleDelete = () => deleteUser(user.id);\r\n\r\n    return (\r\n      <tr key={user.id}>\r\n        <td className=\"user__name\">{user.name}</td>\r\n        <td className=\"user__occupation\">{user.occupation}</td>\r\n        <td>\r\n          <button className=\"edit btn btn-primary\" onClick={handleEdit}>\r\n            Edit\r\n          </button>\r\n          {editMode ? (\r\n            <button className=\"delete btn btn-danger disabled\">Delete</button>\r\n          ) : (\r\n            <button className=\"delete btn btn-danger\" onClick={handleDelete}>\r\n              Delete\r\n            </button>\r\n          )}\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h3>Users</h3>\r\n      <table className=\"table table-striped table-hover\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Occupation</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.length === 0 ? (\r\n            <tr>\r\n              <th colSpan={3}>No Data Available</th>\r\n            </tr>\r\n          ) : (\r\n            rows\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewUsers;\r\n","import React from \"react\";\r\n\r\nconst Form = props => {\r\n  const handleCloseEdit = () => props.closeEdit();\r\n\r\n  return (\r\n    <form onSubmit={props.submitFn} autoComplete=\"off\">\r\n      <div className=\"form-group\">\r\n        <label htmlFor={props.nameId}>Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={props.name}\r\n          id={props.nameId}\r\n          className=\"form-control form-control-lg\"\r\n          onChange={props.changeFn}\r\n          onBlur={props.blurFn}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor={props.occupationId}>Occupation</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"occupation\"\r\n          value={props.occupation}\r\n          id={props.occupationId}\r\n          className=\"form-control form-control-lg\"\r\n          onChange={props.changeFn}\r\n          onBlur={props.blurFn}\r\n        />\r\n      </div>\r\n      {props.formType === \"edit\" ? (\r\n        <div className=\"ctrl__btns\">\r\n          <span className=\"btn btn-secondary\" onClick={handleCloseEdit}>\r\n            Cancel\r\n          </span>\r\n          <input type=\"submit\" className=\"btn btn-primary\" value=\"Edit\" />\r\n        </div>\r\n      ) : (\r\n        <input type=\"submit\" className=\"btn btn-success\" value=\"Add\" />\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState } from \"react\";\r\nimport Form from \"./Form\";\r\n\r\nconst AddUser = ({ addUser }) => {\r\n  const currentUser = { name: \"\", occupation: \"\" };\r\n  const [user, setUser] = useState(currentUser);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const handleBlur = e => {\r\n    const { name, value } = e.target;\r\n\r\n    setUser({ ...user, [name]: value.trim() });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (!user.name || !user.occupation) return;\r\n\r\n    addUser(user);\r\n    setUser(currentUser);\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-user\">\r\n      <h3>Add User</h3>\r\n      <Form\r\n        nameId=\"add__name\"\r\n        occupationId=\"add__occupation\"\r\n        name={user.name}\r\n        occupation={user.occupation}\r\n        submitFn={handleSubmit}\r\n        changeFn={handleChange}\r\n        blurFn={handleBlur}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Form from \"./Form\";\r\n\r\nconst EditUser = ({ userToEdit, editUser, closeEdit }) => {\r\n  const [user, setUser] = useState(userToEdit);\r\n\r\n  useEffect(() => {\r\n    setUser(userToEdit);\r\n  }, [userToEdit]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const handleBlur = e => {\r\n    const { name, value } = e.target;\r\n\r\n    setUser({ ...user, [name]: value.trim() });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (!user.name || !user.occupation) return;\r\n\r\n    editUser(user);\r\n  };\r\n\r\n  return (\r\n    <div className=\"edit-user\">\r\n      <h3>Edit User</h3>\r\n      <Form\r\n        formType=\"edit\"\r\n        nameId=\"edit__name\"\r\n        occupationId=\"edit__occupation\"\r\n        name={user.name}\r\n        occupation={user.occupation}\r\n        closeEdit={closeEdit}\r\n        submitFn={handleSubmit}\r\n        changeFn={handleChange}\r\n        blurFn={handleBlur}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n","import React, { useState } from \"react\";\r\nimport { data } from \"./data/users\";\r\nimport ViewUsers from \"./Components/ViewUsers\";\r\nimport AddUser from \"./Components/AddUser\";\r\nimport EditUser from \"./Components/EditUser\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\";\r\n\r\nconst App = () => {\r\n  const user = { id: null, name: \"\", occupation: \"\" };\r\n\r\n  const [users, setUsers] = useState(data.users);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [selectUser, setSelectUser] = useState(user);\r\n\r\n  const add = user => {\r\n    const len = users.length;\r\n    const newId = len === 0 ? 1 : users[len - 1].id + 1;\r\n\r\n    user.id = newId;\r\n\r\n    setUsers([...users, user]);\r\n  };\r\n\r\n  const del = id => {\r\n    setUsers(users.filter(user => user.id !== id));\r\n  };\r\n\r\n  const edit = userToEdit => {\r\n    setIsEdit(true);\r\n    setSelectUser(userToEdit);\r\n  };\r\n\r\n  const editUser = editedUser => {\r\n    const usersArr = users.map(user => {\r\n      return user.id === editedUser.id ? editedUser : user;\r\n    });\r\n\r\n    setUsers(usersArr);\r\n    setIsEdit(false);\r\n    setSelectUser(user);\r\n  };\r\n\r\n  const closeEdit = () => {\r\n    setIsEdit(false);\r\n    setSelectUser(user);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Personnel Manager</h1>\r\n      <div className=\"row\">\r\n        <div className=\"form-container col-md-5\">\r\n          {isEdit ? (\r\n            <EditUser\r\n              userToEdit={selectUser}\r\n              editUser={editUser}\r\n              closeEdit={closeEdit}\r\n            />\r\n          ) : (\r\n            <AddUser addUser={add} />\r\n          )}\r\n        </div>\r\n        <div className=\"table-responsive-md col-md-7\">\r\n          <ViewUsers\r\n            users={users}\r\n            editMode={isEdit}\r\n            deleteUser={del}\r\n            editUser={edit}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import \"react-app-polyfill/ie11\";\r\nimport \"react-app-polyfill/stable\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}